# Disable agents 
agentGroups:
  - name: "default"
    queues: "default"
    replicaCount: 0

# Enable external services as dependencies
mongodb:
  enabled: true
  auth:
    enabled: false
  architecture: standalone
  
  # Override Bitnami security contexts for OpenShift
  podSecurityContext:
    enabled: true
    runAsNonRoot: true
    # Don't set fsGroup, let OpenShift handle it
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - ALL

redis:
  enabled: true
  auth:
    enabled: false
  architecture: standalone
  
  # Override Bitnami security contexts for OpenShift
  master:
    podSecurityContext:
      enabled: true
      runAsNonRoot: true
    containerSecurityContext:
      enabled: true
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: false
      capabilities:
        drop:
          - ALL

elasticsearch:
  enabled: false

# External services configuration for OpenShift
externalServices:
  # Use automatic Kubernetes service discovery (same as working AsyncDelete)
  elasticsearchConnectionString: ""

# API Server configurations
apiserver:
  enabled: true
  
  # Use ClusterIP for internal communication
  service:
    type: ClusterIP
    port: 8008
  
  # Security context for restricted SCC  
  podSecurityContext:
    runAsNonRoot: true
    # Remove fsGroup - let OpenShift assign based on namespace UID range
  containerSecurityContext:
    runAsNonRoot: true
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: false
    capabilities:
      drop:
        - ALL
  
  # Clean deployment first, then patch with init container
  
  # Volume configuration - using init container approach
  additionalVolumes:
    - name: apiserver-logs
      emptyDir: {}
    - name: apiserver-errors
      emptyDir: {}
# Writable cache volume removed for no-mounting approach
    - name: ca-certificates
      configMap:
        name: clearml-ca-certificates
    - name: hosts-config
      configMap:
        name: clearml-hosts-config
    - name: cache-fix-script
      configMap:
        name: clearml-cache-fix-script
        defaultMode: 0755

  
  # Volume mount configuration
  additionalVolumeMounts:
    - name: apiserver-logs
      mountPath: /var/log/clearml
    - name: apiserver-errors
      mountPath: /opt/clearml/apiserver/apierrors/errors
# Writable cache mount removed for no-mounting approach

    - name: ca-certificates
      mountPath: /etc/ssl/clearml
      readOnly: true
    - name: hosts-config
      mountPath: /opt/clearml/config/hosts.conf
      subPath: hosts.conf
      readOnly: true
    - name: cache-fix-script
      mountPath: /scripts
      readOnly: true

  
  # Remove command override - use init container approach instead

  # Use Helm chart's built-in elasticsearch configuration - no duplicate host vars
  extraEnvs:
    # Cache configuration - redirect to writable location
    - name: CLEARML_CACHE_FILE
      value: "/tmp/clearml-cache/_cache.json"
    - name: CLEARML__schema__cache_path
      value: "/tmp/clearml-cache/_cache.json"
    # Proper SSL configuration with CA certificate
    - name: REQUESTS_CA_BUNDLE
      value: "/etc/ssl/clearml/ca.crt"
    - name: CURL_CA_BUNDLE
      value: "/etc/ssl/clearml/ca.crt"
    - name: SSL_CERT_FILE
      value: "/etc/ssl/clearml/ca.crt"
    # SSL verification handled by hosts.conf - no conflicting env vars
    # Authentication handled by hosts.conf only - no conflicting env vars
    # Try to bypass Elasticsearch initialization check
    - name: CLEARML__apiserver__elastic__validate
      value: "false"
    - name: CLEARML__apiserver__pre_populate
      value: "false"
    # Comprehensive cache redirection to writable location
    - name: CLEARML_CACHE_FILE
      value: "/var/cache/clearml/_cache.json"
    - name: CLEARML__schema__cache_path
      value: "/var/cache/clearml/_cache.json"
    - name: CLEARML__apiserver__cache_path
      value: "/var/cache/clearml/_cache.json"
    - name: CLEARML__cache__path
      value: "/var/cache/clearml/_cache.json"
    - name: CLEARML_SCHEMA_CACHE_PATH
      value: "/var/cache/clearml/_cache.json"
    # All Elasticsearch configuration handled by hosts.conf - no conflicting env vars


# Apply the same volume configurations to other components that need it
clearml:
  fileserver:
    service:
      type: ClusterIP
    podSecurityContext:
      runAsNonRoot: true
    containerSecurityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: false
      capabilities:
        drop:
          - ALL
    # Add volume mounts for fileserver writable directories
    additionalVolumes:
      - name: fileserver-logs
        emptyDir: {}
      - name: fileserver-data
        emptyDir: {}
    additionalVolumeMounts:
      - name: fileserver-logs
        mountPath: /var/log/clearml
      - name: fileserver-data
        mountPath: /mnt/fileserver

  webserver:
    service:
      type: ClusterIP
    podSecurityContext:
      runAsNonRoot: true
    containerSecurityContext:
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: false
      capabilities:
        drop:
          - ALL
    # Add volume mounts for webserver writable directories  
    additionalVolumes:
      - name: webserver-logs
        emptyDir: {}
      - name: webserver-tmp
        emptyDir: {}
    additionalVolumeMounts:
      - name: webserver-logs
        mountPath: /var/log/clearml
      - name: webserver-tmp
        mountPath: /tmp

# Web files copy job configuration
webFiles:
  copyJob:
    enabled: true
    image: allegroai/clearml:1.16.2-426 